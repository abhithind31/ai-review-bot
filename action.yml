# action.yml
name: 'AI Code Review Bot Action'
description: 'Runs AI-based code reviews on PR hunks triggered by a comment, using AWS Bedrock.'
author: 'Your Name or Organization' # Optional: Add author info

inputs:
  github-token:
    description: 'GitHub token for API calls. Defaults to the token provided by the workflow.'
    required: false # Set to false as we'll default it
    default: ${{ github.token }}
  aws-access-key-id:
    description: 'AWS Access Key ID for Bedrock access.'
    required: true
  aws-secret-access-key:
    description: 'AWS Secret Access Key for Bedrock access.'
    required: true
  aws-region:
    description: 'AWS Region where Bedrock model is hosted (e.g., us-east-1).'
    required: true
  bedrock-model-id:
    description: 'AWS Bedrock model ID to use (e.g., anthropic.claude-v2:1, anthropic.claude-3-sonnet-20240229-v1:0).'
    required: false
    default: 'anthropic.claude-3-sonnet-20240229-v1:0' # Default to a recent Claude model
  config-path:
    description: 'Path to the ai-reviewer.yml config file in the consuming repo.'
    required: false
    default: '.github/ai-reviewer.yml' # Renamed config file for clarity

runs:
  using: 'composite'
  steps:
    # Note: The action runner automatically checks out the action's repository code ($GITHUB_ACTION_PATH)
    # We don't need an explicit checkout step for the action code itself.

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Match your script's requirement

    - name: Install dependencies
      shell: bash
      run: |
        echo "Installing dependencies from ${{ github.action_path }}/requirements.txt"
        python -m pip install --upgrade pip
        # Ensure google-generativeai is removed if present in requirements.txt from previous versions
        # pip uninstall google-generativeai -y || true 
        pip install -r ${{ github.action_path }}/requirements.txt

    - name: Run AI Review Script
      shell: bash
      env:
        # Map action inputs to environment variables expected by the script
        GITHUB_TOKEN: ${{ inputs.github-token }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        AWS_REGION: ${{ inputs.aws-region }}
        BEDROCK_MODEL_ID: ${{ inputs.bedrock-model-id }}
        CONFIG_PATH: ${{ inputs.config-path }}
        # Pass standard GitHub Actions environment variables needed by the script
        GITHUB_EVENT_PATH: ${{ github.event_path }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_API_URL: ${{ github.api_url }}
        # Extract PR number from the event context
        # This assumes the action is triggered by an issue_comment on a PR
        PR_NUMBER: ${{ github.event.issue.number }}

      # Run the main script located within the action's directory
      run: python ${{ github.action_path }}/src/main.py 